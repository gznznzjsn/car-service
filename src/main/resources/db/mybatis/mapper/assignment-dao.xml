<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gznznzjsn.carservice.dao.AssignmentDao">
    <resultMap id="AssignmentResultMap" type="Assignment" autoMapping="false">
        <id column="assignment_id" property="id" jdbcType="BIGINT"/>
        <result column="a_specialization_value" property="specialization" jdbcType="VARCHAR"/>
        <result column="a_status_value" property="status" jdbcType="VARCHAR"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime"/>
        <result column="final_cost" property="finalCost" jdbcType="NUMERIC"/>
        <result column="user_commentary" property="userCommentary" jdbcType="VARCHAR"/>
        <result column="employee_commentary" property="employeeCommentary" jdbcType="VARCHAR"/>
        <association column="order_id" property="order" javaType="Order" autoMapping="false">
            <id column="order_id" property="id" jdbcType="BIGINT"/>
            <result column="o_status_value" property="status" jdbcType="VARCHAR"/>
            <result column="arrival_time" property="arrivalTime" jdbcType="TIMESTAMP"
                    javaType="java.time.LocalDateTime"/>
            <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
            <result column="finished_at" property="finishedAt" jdbcType="TIMESTAMP"/>
            <association column="user_id" property="user" javaType="User" notNullColumn="user_id" autoMapping="false">
                <id column="user_id" property="id" jdbcType="BIGINT"/>
                <result column="user_name" property="name" jdbcType="VARCHAR"/>
            </association>
        </association>
        <association column="employee_id" property="employee" javaType="Employee" notNullColumn="employee_id"
                     autoMapping="false">
            <id column="employee_id" property="id" jdbcType="BIGINT"/>
            <result column="e_specialization_value" property="specialization" jdbcType="VARCHAR"/>
            <result column="employee_name" property="name" jdbcType="VARCHAR"/>
        </association>
        <collection column="task_id" javaType="ArrayList" property="tasks" ofType="Task" autoMapping="false">
            <id column="task_id" property="id" jdbcType="BIGINT"/>
            <result column="task_name" property="name" jdbcType="VARCHAR"/>
            <result column="duration" property="duration" jdbcType="INTEGER"/>
            <result column="cost_per_hour" property="costPerHour" jdbcType="NUMERIC"/>
            <result column="t_specializations_value" property="specialization" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <sql id="select_assignment">
        SELECT assignment_id,
               a_sp.value as a_specialization_value,
               a_st.value as a_status_value,
               start_time,
               final_cost,
               user_commentary,
               employee_commentary,
               order_id,
               o_st.value as o_status_value,
               arrival_time,
               created_at,
               finished_at,
               user_id,
               u.name     as user_name,
               e.employee_id,
               e.name     as employee_name,
               e_sp.value as e_specialization_value,
               task_id,
               tasks.name as task_name,
               duration,
               cost_per_hour,
               t_sp.value as t_specialization_value
        FROM assignments a
                 JOIN specializations a_sp USING (specialization_id)
                 JOIN assignment_statuses a_st USING (assignment_status_id)
                 JOIN orders o USING (order_id)
                 JOIN statuses o_st USING (status_id)
                 LEFT JOIN users u USING (user_id)
                 LEFT JOIN employees e USING (employee_id)
                 FULL OUTER JOIN specializations e_sp on e_sp.specialization_id = e.specialization_id
                 JOIN assignments_tasks USING (assignment_id)
                 JOIN tasks USING (task_id)
                 JOIN specializations t_sp on t_sp.specialization_id = tasks.specialization_id
    </sql>
    <select id="read" resultMap="AssignmentResultMap">
     <include refid="select_assignment"/>
      WHERE a.assignment_id = #{assignmentId};
    </select>
    <select id="readAllByOrderId" parameterType="Long" resultMap="AssignmentResultMap">
        <include refid="select_assignment"/>
        WHERE a.order_id = #{orderId};
    </select>

    <insert id="create" keyProperty="id" keyColumn="assignment_id" useGeneratedKeys="true">
        INSERT INTO assignments (order_id, specialization_id, start_time, final_cost, employee_id, assignment_status_id,
                                 user_commentary, employee_commentary)
        VALUES (#{order.id}, (SELECT specialization_id FROM specializations WHERE value = #{specialization}),
                #{startTime}, #{finalCost}, #{employee.id},
                (SELECT assignment_status_id FROM assignment_statuses WHERE value = #{status}), #{userCommentary},
                #{employeeCommentary});
    </insert>
    <insert id="createTasks">
        INSERT INTO assignments_tasks (task_id, assignment_id)
        VALUES
        <foreach collection="tasks" item="task" index="index" open="(" separator="),(" close=")">
            #{task.id},#{id}
        </foreach>
    </insert>
    <update id="update">
        UPDATE assignments
        SET specialization_id=(SELECT specialization_id FROM specializations WHERE value = #{specialization}),
            start_time= #{startTime},
            final_cost= #{finalCost},
            employee_id= #{employee.id},
            assignment_status_id=(SELECT assignment_status_id FROM assignment_statuses WHERE value = #{status}),
            user_commentary = #{userCommentary},
            employee_commentary = #{employeeCommentary}
        WHERE assignment_id = #{id}
    </update>
</mapper>