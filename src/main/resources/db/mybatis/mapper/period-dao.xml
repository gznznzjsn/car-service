<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gznznzjsn.carservice.dao.PeriodDao">
    <resultMap id="PeriodResultMap" type="Period" autoMapping="false">
        <id column="period_id" property="id" jdbcType="BIGINT"/>
        <result column="period_date" property="date" jdbcType="TIMESTAMP"/>
        <result column="period_start" property="start" jdbcType="SMALLINT"/>
        <result column="period_end" property="end" jdbcType="SMALLINT"/>
        <association property="employee" column="employee_id" javaType="Employee" autoMapping="false">
            <id column="employee_id" property="id" jdbcType="BIGINT"/>
            <result column="specialization_value" property="specialization" jdbcType="VARCHAR"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <insert id="update" >
        UPDATE periods
        SET employee_id = #{employee.id},
            period_start= #{start},
            period_end= #{end}
        WHERE period_id = #{id}
    </insert>
    <select id="read" parameterType="Long" resultMap="PeriodResultMap">
        SELECT period_id, period_date, period_start, period_end, employee_id, name, value
        FROM periods
                 JOIN employees USING (employee_id)
                 JOIN specializations USING (specialization_id)
        WHERE period_id = #{periodId}
    </select>
    <select id="readBy" resultMap="PeriodResultMap">
        SELECT period_id,
               period_date,
               period_start,
               period_end,
               employee_id,
               name,
               value as specialization_value
        FROM periods
                 JOIN employees USING (employee_id)
                 JOIN specializations USING (specialization_id)
        WHERE value = #{specialization}
          AND period_date > #{arrivalTime}::date
          AND (period_end - period_start) >= #{totalDuration}
        ORDER BY period_date, period_start
        LIMIT 1;
    </select>
    <delete id="delete" parameterType="Long">
        DELETE
        FROM periods
        WHERE period_id = #{periodId};
    </delete>
</mapper>